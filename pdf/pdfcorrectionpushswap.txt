PUSH_SWAP correction
Partie obligatoire
Rappel : si a un moment ou un autre, le programme ne réagit pas correctement (bus error, segfault, etc..), ou bien si vous détectez une fuite mémoire, la soutenance est terminée et la note est 0. Pensez à utiliser les flags correspondants quand nécessaire. Cette consigne est active d'un bout à l'autre de la soutenance.

Fuites mémoire


Pendant toute la durée de la soutenance, gardez un oeil sur la
quantité de mémoire utilisée par le push_swap (à l'aide de
top par exemple) pour detecter des anomalies, et vérifiez dans
le code que les allocations sont systématiquement libérées.
Dans le cas contraire il y a au moins une fuite mémoire, la
note du projet est 0.

 Yes
 No
Gestion des erreurs


Dans cette section nous allons évaluer la bonne gestion des
erreurs de votre push_swap.
Si au moins l'un des tests échoue, aucun point n'est gagné
pour cette question. Passez à la question suivante.

- Lancer push_swap avec des paramètres non numériques. Le programme
doit afficher "Error".

- Lancer push_swap avec un doublon dans les paramètres. Le programme
doit afficher "Error".

- Lancer push_swap avec seulement des nombres en paramètre, l'un d'entre
eux étant supérieur à MAXINT. Le programme doit afficher "Error".

- Lancer push_swap avec aucun paramètre. Le programme ne doit rien afficher,
se terminer, et le shell affiche son prompt.

 Yes
 No
Push_swap - Identité


Nous allons évaluer dans cette section le comportement du
programme push_swap sur une liste de paramètres déja triés.
Effectuez les 3 tests suivants. Si l'un au moins de ces tests
échoue, cette section du barème est échouée et aucun point
n'est gagné, passez à la suivante.

- Lancez "$>./push_swap 42". Le programme affiché doit être
vide (0 instruction).

- Lancez "$>./push_swap 0 1 2 3". Le programme affiché doit
être vide (0 instruction).

- Lancez "$>./push_swap 0 1 2 3 4 5 6 7 8 9". Le programme
affiché doit être vide (0 instruction).

 Yes
 No
Push_swap - tests simples


Si le test suivant échoue, cette section du barème est
échouée et aucun point n'est gagné, passez à la suivante.

- Lancez "$>ARG="2 1 0"; ./push_swap $ARG | ./checker_OS $ARG".
Vérifiez que le programme checker affiche OK que la taille
du programme calculé par le programme push_swap est de 2 OU
3 instructions. Sinon le test est échoué.

 Yes
 No
D'autres tests tout aussi simples


Si l'un des 2 tests suivants échoue, cette section du barème
est échouée et aucun point n'est gagné, passez à la
suivante.

- Lancez "$>ARG="1 5 2 4 3"; ./push_swap $ARG | ./checker_OS $ARG". Vérifiez que le programme checker affiche OK et que
la taille du programme calculé par le programme push_swap
est de 12 instructions au maximum. Sinon le test est
échoué. Kudos pour la personne évaluée si la taille
programme est de 8 instructions.

- Lancez "$>ARG="<5 params au choix>"; ./push_swap $ARG | ./checker_OS $ARG" en remplacant le placeholder par 5 valeurs
valides de votre choix. Vérifiez que le programme checker
affiche OK et que la taille du programme calculé par le
programme push_swap est de 12 instructions au maximum. Sinon
le test est échoué. Vous devez en particulier vérifier
avec ce test que le programme push_swap n'a pas été
programmé pour répondre correctement uniquement aux tests
de ce barème. Vous êtes encouragés à répéter ce test
avec plusieurs variantes avant de le valider.

 Yes
 No
Push_swap - tests intermédiaires


Si le test suivant échoue, cette section du barème est
échouée et aucun point n'est gagné, passez à la suivante.

- Lancez "$>ARG="<100 params au choix>"; ./push_swap $ARG | ./checker_OS $ARG" en remplacant le placeholder par 100 valeurs
valides de votre choix. Vérifiez que le programme checker
affiche OK et mettez des points en fonction du nombre
d'instructions effectuées:
- Moins de 700: 5
- Moins de 900: 4
- Moins de 1100: 3
- Moins de 1300: 2
- Moins de 1500: 1
Vous devez en particulier vérifier
avec ce test que le programme push_swap n'a pas été
programmé pour répondre correctement uniquement aux
tests de ce barème. Vous êtes encouragés à répéter
ce test avec plusieurs variantes avant de le valider.

Rate it from 0 (failed) through 5 (excellent)

Push_swap - tests avancés


Si le test suivant échoue, cette section du barème est
échouée et aucun point n'est gagné, passez à la suivante.

- Lancez "$>ARG="<500 params au choix>"; ./push_swap $ARG | ./checker_OS $ARG" en remplacant le placeholder par 500 valeurs
valides de votre choix (on vous appelle pas
Jean(ne)-Michel(le) Script pour rien). Vérifiez que le
programme checker affiche OK et mettez des points en
fonction du nombre d'instructions effectuées:
- Moins de 5500: 5
- Moins de 7000: 4
- Moins de 8500: 3
- Moins de 10000: 2
- Moins de 11500: 1 Vous devez en particulier vérifier
avec ce test que le programme push_swap n'a pas été
programmé pour répondre correctement uniquement aux
tests de ce barème. Vous êtes encouragés à répéter
ce test avec plusieurs variantes avant de le valider.

Rate it from 0 (failed) through 5 (excellent)

Bonus
Rappel : si a un moment ou un autre, le programme ne réagit pas correctement (bus error, segfault, etc..), la soutenance est terminée et la note est 0. Pensez à utiliser les flags correspondants. Cette consigne est active d'un bout à l'autre de la soutenance. Les bonus ne doivent être évalués que si et seulement si la partie obligatoire est PARFAITE. Par PARFAITE, on entend bien évidemment qu'elle est entièrement réalisée, qu'il n'est pas possible de mettre son comportement en défaut, même en cas d'erreur, aussi vicieuse soit-elle, de mauvaise utilisation, etc. Concrètement, cela signifie que si la partie obligatoire n'a pas obtenu TOUS les points pendant cette soutenance, les bonus doivent être intégralement IGNORÉS.

Checker - gestion des erreurs


Nous allons évaluer dans cette section la gestion d'erreur du
programme checker. Effectuez les tests suivants. Si l'un au
moins de ces tests échoue, cette section du barème est
échouée et aucun point n'est gagné, passez à la suivante.

- Lancez checker avec des paramètres non numériques. Le
programme doit afficher "Error".

- Lancez checker avec 2 fois le même paramètre numérique. Le
programme doit afficher "Error".

- Lancez checker avec uniquement des paramètres numériques
dont l'un plus grand que MAXINT. Le programme doit afficher
"Error".

- Lancez checker sans aucun paramètre. Le programme doit rendre
la main et ne rien afficher.

- Lancez checker avec des paramètres valides, puis au moment
d'entrer les insctructions à exécuter, entrez des
instructions qui n'existent pas. Le programme doit afficher
"Error".

- Lancez checker avec des paramètres valides, puis au moment
d'entrer les insctructions à exécuter, entrez des
instructions valides, mais précédez les et terminez les avec
un ou plusieurs espaces. Le programme doit afficher "Error".

 Yes
 No
Checker - tests des faux résultats


Nous allons évaluer dans cette section le comportement du
programme checker lorsque le programme lu ne trie pas la liste.
Effectuez les 2 tests suivants. Si l'un au moins de ces tests
échoue, cette section du barème est échouée et aucun point
n'est gagné, passez à la suivante.

N'oubliez pas d'appuyer sur ctrl+d pour arrêter la lecture une
fois que vous avez fini d'entrer les instructions.

- Lancez checker avec la commande "$>./checker 0 9 1 8 2 7 3 6 4 5" puis entrez les instructions suivantes avec un formatage
valide : [sa, pb, rrr]. Le programme checker doit afficher
"KO".

- Lancez checker avec une liste de paramètres valides de votre
choix, puis entrez les instructions de votre choix avec un
formatage valide, mais qui ne permettent pas de trier les
entiers. Le programme checker doit afficher "KO". Vous devez
en particulier vérifier avec ce test que le programme checker
n'a pas été programmé pour répondre correctement
uniquement aux tests de ce barème. Vous êtes encouragés à
répéter ce test avec plusieurs variantes avant de le
valider.

 Yes
 No
Checker - test des résultats corrects


Nous allons évaluer dans cette section le comportement du
programme checker lorsque le programme lu trie la liste.
Effectuez les tests suivants. Si l'un au moins de ces tests
échoue, cette section du barème est échouée et aucun point
n'est gagné, passez à la suivante.

N'oubliez pas d'appuyer sur ctrl+d pour arrêter la lecture une
fois que vous avez fini d'entrer les instructions.

- Lancez checker avec la commande "$>./checker 0 1 2" puis
appuyez sur ctrl+d sans entrer d'instructions. Le programme
checker doit afficher "OK".

- Lancez checker avec la commande "$>./checker 0 9 1 8 2" puis
entrez les instructions suivantes avec un formatage valide :
[pb, ra, pb, ra, sa, ra, pa, pa]. Le programme checker doit
afficher "OK".

- Lancez checker avec une liste de paramètres valides de votre
choix, puis entrez les instructions de votre choix avec un
formatage valide qui permettent de trier les entiers. Le
programme checker doit afficher "OK". Vous devez en
particulier vérifier avec ce test que le programme checker
n'a pas été programmé pour répondre correctement
uniquement aux tests de ce barème. Vous êtes encouragés à
répéter ce test avec plusieurs variantes avant de le
valider.


500 params between 1 and 1500




500 params between 1 and 1500



500 params between -2147483648 and 2147483647

1358529626 -1106846850 -953087554 -126241456 -1138993330 -1863376147 -1685280419 -234983286 -1300678899 -1401818781 2053014197 -895286511 502281368 720052974 2009896977 -1409494430 -1313428990 1945142845 -1386048768 67508864 -767366815 1814324547 -514260453 -287696298 324481619 -1396511108 -57677609 -517429036 -2043051607 -852566093 -477105570 -1038012097 -918274851 -448930566 723296233 -623748517 -1577266533 485098738 -1797533746 -1870259335 -1098503641 -893028331 -2017706432 -865397067 -558821830 -491349035 1998599104 1126761883 -307095300 -1207708096 -360665457 2135390332 -1362572929 -1606368453 -1398331432 746146700 -1869019106 -410066816 -833987986 1055702608 -88224007 1923147854 -1734801530 1718616638 893925453 1371595020 1526242978 1580595163 1826784243 1112979181 -88103637 -1713350488 671124384 -23570048 710584718 -188207275 328437545 1700891917 55658896 -394480499 -1652561357 -667548874 1879628408 2104246783 -227195609 -1474757320 1050214388 752175407 1291388666 796827606 -1746285070 -833586348 356146957 -540903811 1819121804 1134521277 -88937471 978808483 674436779 -1364148868 1504503194 -22549729 771411037 -1331536619 1794293753 1831648033 357009847 866327429 822890360 2058946628 1110426910 -1536115263 -1556292492 -709750497 1438900083 868218577 1194997434 -573695182 -1671229683 1183604261 -48317918 -1761592583 -1774573166 -1068945199 -1493120511 1316093587 -1568770753 1987898514 158466362 780801924 -978649288 744949043 -509713060 1225405895 -532836316 -808928643 595985850 -1241071058 -1973580303 1173007119 -103685509 328410341 470476592 -2119900222 -225537682 1426320924 389160143 528013820 -1341132637 654475776 2132399898 -1369025535 -320272069 -1772054147 -1874541945 -662076671 -379263633 1593616156 -479311872 -1710713393 -1374397421 1848079971 773282788 -1933398993 -30614222 -1412983648 -1034099811 1801081837 462195679 -294720417 530835774 -1181528019 -446300395 1279741941 -388632786 -983150671 -534964633 -1452156276 -2064190590 1049222655 -1248832978 -1710554252 -833729038 1043063140 2099549624 -149922412 -232323962 -1704149633 1373895436 1121486331 -1035682528 -220907870 -1635395900 -775186553 1314907051 -1812229476 -1089016435 918503717 1605100555 41913699 142460257 -1644318144 -776715116 -1335987832 -1003064271 -1600934150 1901162310 1447002835 -1512482260 360787259 -1907629494 -1753190363 -1079664103 627655022 2111355708 944387869 844687972 412517800 1849480023 -762077641 -503144142 2053172916 1820255244 1948900541 1618931014 1162976171 363534277 -1874968736 304446256 -1783687108 -1991168307 -504000024 -1757241757 1567275888 1050932912 57595281 1161714119 717628943 -1421460765 -1930462193 38669185 575099301 -1541334782 -387876686 1798133492 1507110051 1959096207 -27013565 253177044 1864658436 -1955017302 -784184364 -1974134400 -628000190 -1419212436 1599918195 177404449 924939341 -87142528 1845543717 1259107844 -492259481 1619536687 1896512734 -500605075 -635955586 -1455902709 1637412112 356868126 -225124490 -1066996869 1435437204 -952731833 -1376970345 21872981 -1004886252 1019989174 656826172 1049342722 -464680836 1988379778 1860157059 368713134 472869558 553724123 663782839 -1487942702 -1733148138 -618903602 1597477281 728811930 -1432116583 -211071458 1041890095 1732227294 1888126125 2137770582 223210677 1653254701 1521873371 287170172 -1395884039 1155895030 1850441351 933348673 437399940 1583523041 1948574912 1735402076 -1558569251 -1090462666 -140957820 -548464861 -20071602 -309232283 -1804544594 1170907615 1214693960 1447349132 1123799802 747089138 -836977076 -1375253378 -989190393 -1166976307 -1335872544 -1041230597 -1310778038 1375431730 -1542108712 -948470566 1008144009 274884136 1723820030 508914890 -1799380552 988087223 428118039 -834074282 108639970 2140254238 447661620 -1681695398 -464817507 -820966489 2100410101 -1412752286 1529812023 113232668 1015196090 771880514 -269463721 859637282 623127032 -1742588414 -1515971027 -1120794025 770417486 1418566264 -1646067074 -1436456223 962467127 197096601 1942630087 618097829 -1864212768 -506919539 1874844912 1520940588 -704948989 2105798715 1140979345 494578671 -99158216 -1429142924 2114506307 380411746 1601284129 -1222532836 640357793 -1004535926 -359129335 596294999 1554999935 -1249490548 -466128735 -553134982 160053504 709662143 335668151 1089452523 -1728892657 122212996 1183674133 -1722356891 -948267581 -1619689865 1439949636 1352161987 318972830 -145683147 -1280899638 880628083 -1205477310 467043626 -1559642613 699519276 130781720 547588503 -1392138100 1484408568 511829589 -590949204 -554176053 -723883766 -1303559939 175741308 910603546 686012265 -2128255931 9833225 -1554570511 572298643 -1647810314 -1419444745 1273111247 631632632 1115046433 338657428 -1520507221 75794968 -238917799 2043740454 -77068086 -1835576244 -155963262 -1096885949 250496590 351746230 167443024 -39759153 -1673005115 -177824589 -1681279232 901310904 -658573362 1517073840 -1231564377 999407404 1365821601 1492614887 2040740243 2076631579 -869193118 -453488542 -2137879465 -1118496639 2144948765 498239898 1178448216 794135362 -1754839651 1597254863 -971183331 -1730970715 -1214872178 1126159684 -496597840 -1378852684 1619083689 -1025497022 -464741019 1160755168 -634978404 -1872008370 -1921180232 535225451 -1363163086 885659930 -1305072776 -487497878 -1016575296 -796759 -1723782466 567349013 -1811974008 991862282 -1486613111 1190066443 790085680 -842709348 -1947662170 -875233353 1257508091 -1987267974 -820016467 -520437691 -87592797 1949655104 653212850

—————————————————————————————————————————————

100 params between 1 and 2147483645

1096965 35647522 727065898 975127215 750652185 1172086789 1462703796 477059988 455790914 27713991 641128529 1923276292 1564158718 562268301 1388302405 1041165991 451092621 623397651 305575930 1587180491 1141802357 1599164005 556004156 1231009976 741051289 1749849902 1952398047 834894698 188761758 313474264 1100366005 2008471077 1859015486 269315138 297020876 1008137541 1904441065 1391584224 255255011 228473707 129727174 1846938855 99000205 113796539 2092451811 125921602 1450651932 1826849921 415083412 1959344862 1946436177 497883819 1111559662 1301029023 155088185 191935763 363471745 211624108 2142888879 435262499 2027981572 324937089 764358005 939696995 531392598 1620251304 113762752 1512706608 1774507084 1486366862 1359060214 1576920622 2100140318 373478406 631185457 1666726995 1933653355 1985837330 798668039 2012594602 1075692273 83620316 1983710841 1115919819 135578211 1390150546 1316770127 1082364671 1871418001 570814477 1137773542 1777901133 1530520816 1770486740 1235654810 1479258964 669653326 828084549 1937667332 675141394


100 params between 1 and 5000

91 989 1562 508 4466 258 2244 3683 2672 3480 1242 3839 1253 2256 4352 1977 2725 571 378 322 2944 444 3513 4806 2032 3854 4402 1417 3598 797 3523 1235 2452 1677 4486 2227 1487 2403 4263 1909 2381 4334 4349 2436 3758 800 4588 2223 903 2366 1471 3540 2933 1367 3008 4871 3154 2644 2821 89 260 2384 4802 4265 3430 3113 3695 4355 722 2993 1251 4193 1959 2588 2017 3133 602 4246 180 1637 2053 2391 3461 1938 2016 4151 2814 3506 4551 4219 621 1696 4869 4691 1120 1158 3969 3137 2465 3849


100 params between -2147483648 and 2147483647

-930133938 1304161804 804874431 -763122732 -954532075 292813242 -1503362809 -1344768312 -538438905 1787645854 899559222 143656107 1697961716 962543510 523917684 1925576581 -1390700305 332895237 -1414550412 786226065 -168523225 572161355 1315281445 -1511680943 -1692844597 -1971843830 -2111553539 480790054 1450589380 -154352479 438750719 1549155000 -1357456414 1992349751 1513638240 -824872700 1015043921 1531988075 -431974113 581322744 1036112146 1432923865 -212335203 -642019505 230557065 -75045182 -530389568 1755115347 472857816 708231690 1264236119 139550988 2026145470 -1888258178 1876111319 -365998625 -1673105190 -744625300 -1168023592 -507694092 -1269130088 -1953224993 1101486551 -731290692 462822329 -68492728 145648888 1731021036 -1343446953 -102856307 -395018748 -1572419662 -1578645101 -1543514689 -1163904365 1831787806 -1380854103 1475736613 -1431615642 -255050636 1994519509 30196344 1395727360 -1520533015 -2074664813 -1153201909 68904279 124565461 -1268483024 -2068036484 -1263817739 -1897650956 497240891 -1604417074 2023501693 -1623328852 862793191 -39743440 -1995911996 -1739884495

—————————————————————————————————————————————

10 params between -2147483648 and 2147483647

100087424 -1332671057 1773446183 -151928483 1182262460 -468791764 1532372823 -770352676 796969805 296895255


10 params between -2147483648 and 2147483647

-586744643 -529829246 -978963174 1302513826 1448173846 -1407935410 -964261553 1049218131 391613551 -800723424